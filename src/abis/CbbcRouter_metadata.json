{
	"compiler": {
		"version": "0.8.3+commit.8d00100c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ICbbcFactory",
						"name": "factory_",
						"type": "address"
					},
					{
						"internalType": "contract IMarketOracle",
						"name": "marketOracle_",
						"type": "address"
					},
					{
						"internalType": "contract IOrchestrator",
						"name": "orchestrator_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "WETH_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountDesired",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "addLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amountDesired",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "buyCbbc",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amountDesired",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "buyCbbc",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "buyCbbcETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "buyCbbcETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "contract ICbbcFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketOracle",
				"outputs": [
					{
						"internalType": "contract IMarketOracle",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "orchestrator",
				"outputs": [
					{
						"internalType": "contract IOrchestrator",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rebaseThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "approveMax",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "removeLiquidityETHWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "approveMax",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "removeLiquidityWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "sellCbbc",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "settleAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "sellCbbc",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "settleAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "sellCbbcETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "sellCbbcETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "approveMax",
								"type": "bool"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct ICbbcRouter.permitData",
						"name": "permitData_",
						"type": "tuple"
					}
				],
				"name": "sellCbbcETHWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "approveMax",
								"type": "bool"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct ICbbcRouter.permitData",
						"name": "permitData_",
						"type": "tuple"
					}
				],
				"name": "sellCbbcETHWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "approveMax",
								"type": "bool"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct ICbbcRouter.permitData",
						"name": "permitData_",
						"type": "tuple"
					}
				],
				"name": "sellCbbcWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "settlePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tradePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "signature",
								"type": "bytes"
							}
						],
						"internalType": "struct ICbbcRouter.signedPrice",
						"name": "signedPr",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "settleToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tradeToken",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "leverage",
						"type": "uint8"
					},
					{
						"internalType": "enum ICbbcToken.CbbcType",
						"name": "cbbcType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "cbbcAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "approveMax",
								"type": "bool"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct ICbbcRouter.permitData",
						"name": "permitData_",
						"type": "tuple"
					}
				],
				"name": "sellCbbcWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "threshold_",
						"type": "uint256"
					}
				],
				"name": "setRebaseThreshold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CbbcRouter.sol": "CbbcRouter"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CbbcERC20.sol": {
			"keccak256": "0xc983a4dba821fca18fcf57ec4be0c651869c9046e24c9d5710c5ad9e2291ab8a",
			"urls": [
				"bzz-raw://70e72a3fb1830936585fb9b283b366887e86d04bbd379fdd9b9b893fff637785",
				"dweb:/ipfs/Qmav8vht1j5ZGu3uEqLMTVpsVEbQ2gXpP2GdnnJsrKdqMT"
			]
		},
		"contracts/CbbcRouter.sol": {
			"keccak256": "0xcbd0d826a9340fa8bced87a2ed015ffd5ee5503d8c6d9a614b9fe0d896eed4c9",
			"urls": [
				"bzz-raw://86297df4faedb34ce775c8b7535ba560ccc3e348d3d527b4bb733e02df3d41f8",
				"dweb:/ipfs/QmY8NYos5fFBdR63b7JwUPfTDr7kpiSBpRR7crwyqRHKz5"
			]
		},
		"contracts/interfaces/ICbbcERC20.sol": {
			"keccak256": "0x15886141cdf6b0cbfb96a410c40fea18d9d0271069724165a71d5a1b26af4f1e",
			"urls": [
				"bzz-raw://701ef6456a5dc697e80495c347386a2410e0e8164fd8e7464140620d2e3e9f1d",
				"dweb:/ipfs/QmakcGFZ7wmN9HYwGKiCaeXU6KnACJDndsPsQVn7yEV5L3"
			]
		},
		"contracts/interfaces/ICbbcFactory.sol": {
			"keccak256": "0xddf89263d34e695db22a5cba4239bb5841e82c059058abd07b333cb878f2c4e3",
			"urls": [
				"bzz-raw://4fe850a830fd47c80f16567d7a8f8e258d8131aed77fb1375245cb7e0848727d",
				"dweb:/ipfs/QmUhGBrtHhKjvHbm1CNe2PAUjcKBDindT849SbFCH9DQwY"
			]
		},
		"contracts/interfaces/ICbbcLiquidityToken.sol": {
			"keccak256": "0xa72ee34a5de465738ccc30363c9b3edb6716877493ff004bdf41c58b53d1b8c1",
			"urls": [
				"bzz-raw://1287e43be196caf22e383a1e96d6be30ee8b1a43ca7b78e2e0b65645dd9972e1",
				"dweb:/ipfs/QmVmzoUB9TaJT9jBegD8fQgin89X4dHjtMmH7J2jXEXBcE"
			]
		},
		"contracts/interfaces/ICbbcRebasePolicy.sol": {
			"keccak256": "0x681691b27c254d991cecc36881a7e85bc53aa7f60faed0affd767f66d4cdd69d",
			"urls": [
				"bzz-raw://a9b77efbc7d35f40545e0196974fbdd0ebea9da1dc4c4cd50abb8119793729bd",
				"dweb:/ipfs/QmQxoKRantzq39RJxS4ndG32M5mwkvXX3dm68HoiR8GJ1d"
			]
		},
		"contracts/interfaces/ICbbcRouter.sol": {
			"keccak256": "0x38cede4737db9b4a1c5487c920c3ea68b0482772909cf0453f3600cae4475456",
			"urls": [
				"bzz-raw://cb042df77aa080fd0ae3b541e300fff9035e477550044f886f0ac8e19335d302",
				"dweb:/ipfs/QmdCSzhZWA9qzXFKNAmwJTN62ZUHa6Po54mbhKqXVJid9Z"
			]
		},
		"contracts/interfaces/ICbbcToken.sol": {
			"keccak256": "0x3ed222972240492b7d0e135239f8aa7804917dba99d3b79d65aec393a1419ccd",
			"urls": [
				"bzz-raw://8da971865835b76d0caf3762e89df9ff25220acf5e53fa5ae97aa30f2f9274ea",
				"dweb:/ipfs/QmeFCN45fGs2F7BW9W9wKudAMq8tQdf6vZ6p6ptTwbsFgj"
			]
		},
		"contracts/interfaces/IERC20.sol": {
			"keccak256": "0xa1c273c6fdb21a0595554ab9ba141bebb7c4056a032919c4f7a5f48263e24c07",
			"urls": [
				"bzz-raw://fcebcb676e48273ce57f9dc3aae4e6a2166657a13a0ad79f7a3ab166c9be9a66",
				"dweb:/ipfs/QmPBrdRkRaK9APwzBJ21tyL3Mq3FVses4i4JXCoDix3vn2"
			]
		},
		"contracts/interfaces/IMarketOracle.sol": {
			"keccak256": "0x5f69a69f5a679a97534d2c0c13e5587078040bd1be04d0ca76f06f6a9cddd810",
			"urls": [
				"bzz-raw://71296220cee7e984a9a81e9b74a2b071e19254039d4a5cd7762d4d138cbf267b",
				"dweb:/ipfs/QmXZ6ogaYKmUXF5BwVYF1bAhvkVsoH6V7Mj3aVwsd6yuYC"
			]
		},
		"contracts/interfaces/IMedianOracle.sol": {
			"keccak256": "0x1f7c4fb0324c851a6264cc1f9b80ed88b3fbff29a3949f31f2757e01d0d0743a",
			"urls": [
				"bzz-raw://fa022c2ba857f49419c7139e40365f73ce7d4cec11b8307c5765a8182a3cb89b",
				"dweb:/ipfs/Qmb5oC8FMxBFwdhQWE9fiFbKn96ichnPmqCiK6fupXqAZa"
			]
		},
		"contracts/interfaces/IOrchestrator.sol": {
			"keccak256": "0x0c087899f82bf94e073bce03d33730742558acd13cd0d02bad8b0bff2cde0184",
			"urls": [
				"bzz-raw://bb9bbe2d658f6063a276f01e8d5d2329ac3e1fcfdee5e350907b5ddc3bbc5e9f",
				"dweb:/ipfs/QmVL8WbdXZ6ttyNTZxCQdjWySYdMyvX444w6MSMDP19Esn"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0x069feb6709e52f207b273c7df21bd8e9e7d510ffb5176ba20c4dfd80195014a5",
			"urls": [
				"bzz-raw://521d6d47c1e1ce52dd81dda493f8123fad9d2cf89612ecb48785e948244b9479",
				"dweb:/ipfs/QmRnVjfu2oGDdMgfzL6QMcjGJmrmS5vMG8nvDmYhAHAPaT"
			]
		},
		"contracts/libraries/CbbcLibrary.sol": {
			"keccak256": "0x3f41b1c4cd7a09abd0ca96d6756d2da07827a3e522f50298502d16b6a7e107fc",
			"urls": [
				"bzz-raw://eae1e03cd218f071ba3a0efac72026ec656862c161bf650dfa47f83f60c5ffde",
				"dweb:/ipfs/QmXpgtcgBazKMabUMEEff39Vemo7xJpFnkcNzhTNwm9y5F"
			]
		},
		"contracts/libraries/ECDSA.sol": {
			"keccak256": "0x6d738d1a42711a35fbdc92d65a2d879c5bceb9a0fde9c9f8cc98d2557e7c7dfc",
			"urls": [
				"bzz-raw://da4faaa2789e663e52eacf504e4e7a08944ad16ec93e1c0e9d6cb3b5f25ad9ac",
				"dweb:/ipfs/QmXwV8RkET2jsBWKKuYMfMf9uP48XDuWkDB1keum4dr38L"
			]
		},
		"contracts/libraries/ERC20Detailed.sol": {
			"keccak256": "0x87cb1166de206073b867f5414cb9bf23e290b8e506524f900abb34adcddd9db7",
			"urls": [
				"bzz-raw://3256a67ca8bcd016b62b981e281a19ffcd3217e36b6baaccf9e6d5abb8a1ab1d",
				"dweb:/ipfs/QmR9MYmzEQpmiiSXDXtTJ5RpCZ1UKzM7PU2TF6h8RQ4ym5"
			]
		},
		"contracts/libraries/Initializable.sol": {
			"keccak256": "0xc4d7b514aaf67c4164f22e3915f794a84f440bf51cc69fe18f9b38c64c0db54d",
			"urls": [
				"bzz-raw://6f0b38a155cd43cb556b1c082ed57ac5241b8bf13dc9c063f0f1bc5993a734b9",
				"dweb:/ipfs/QmWELzPmyDbNw3hqyWaChikup3n8Gu4iDSLfWNn7BagSLz"
			]
		},
		"contracts/libraries/Math.sol": {
			"keccak256": "0x433eca0a04b209be65c690707d1407816449a37e74ead4a495d76cd7685830a6",
			"urls": [
				"bzz-raw://569997a720861d3a92dbd16af7fc4d28eac5de7bc771a69e66114287d5b78529",
				"dweb:/ipfs/Qmez2JLtS1X44vzEsB2pusaeKPFEhCXpVNG7LFLxJmxPFt"
			]
		},
		"contracts/libraries/Ownable.sol": {
			"keccak256": "0x7f4152498f3405dfcf6bebf506a0bf63c5c10eff783288a867863c8f1387d0c0",
			"urls": [
				"bzz-raw://cb3d0269229c000ab1fba9bc90c63ead275a73ac34c70821d5f967841dd0563c",
				"dweb:/ipfs/QmTEsbfScrrStSXwDxBzuxpijoNHAEdaKVJdemzwUmJifr"
			]
		},
		"contracts/libraries/SafeMathInt.sol": {
			"keccak256": "0x6ddfef08966af4e650b53fe6f0fcc4f4ebe3f8765657b6454fe3b8a7f5347183",
			"urls": [
				"bzz-raw://c0f62b46bad69c65ef3e63280f1fc92a32a3539226b635d17341d8fc1797160f",
				"dweb:/ipfs/QmUMduM89RY4K2qc16GEKiXuAzCuK7QV13auEd7hGm3Pzn"
			]
		},
		"contracts/libraries/TransferHelper.sol": {
			"keccak256": "0x75077c2ee9dbb02f01ac44493259d7afb375bcd9ac38bdee4fdc66acae056097",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://0363a8678ecb3880dae2fdc2163365b79aebdf9e9fba52a9ad577fb32fbe18b7",
				"dweb:/ipfs/QmNri3q8LQbz6o4AxEDd4S1bZTCu4mP3VVEqw3xpUHKwGi"
			]
		}
	},
	"version": 1
}